// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.12.4
// source: query/query.proto

package query

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlaintextQueryMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint32 `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
}

func (x *PlaintextQueryMsg) Reset() {
	*x = PlaintextQueryMsg{}
	mi := &file_query_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaintextQueryMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaintextQueryMsg) ProtoMessage() {}

func (x *PlaintextQueryMsg) ProtoReflect() protoreflect.Message {
	mi := &file_query_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaintextQueryMsg.ProtoReflect.Descriptor instead.
func (*PlaintextQueryMsg) Descriptor() ([]byte, []int) {
	return file_query_query_proto_rawDescGZIP(), []int{0}
}

func (x *PlaintextQueryMsg) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type PlaintextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//uint32 Index = 1;
	Val []uint64 `protobuf:"varint,1,rep,packed,name=Val,proto3" json:"Val,omitempty"`
}

func (x *PlaintextResponse) Reset() {
	*x = PlaintextResponse{}
	mi := &file_query_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaintextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaintextResponse) ProtoMessage() {}

func (x *PlaintextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaintextResponse.ProtoReflect.Descriptor instead.
func (*PlaintextResponse) Descriptor() ([]byte, []int) {
	return file_query_query_proto_rawDescGZIP(), []int{1}
}

func (x *PlaintextResponse) GetVal() []uint64 {
	if x != nil {
		return x.Val
	}
	return nil
}

type RandomHintQueryMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S0  uint32 `protobuf:"varint,1,opt,name=S0,proto3" json:"S0,omitempty"`
	S1  uint32 `protobuf:"varint,2,opt,name=S1,proto3" json:"S1,omitempty"`
	Num uint32 `protobuf:"varint,3,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (x *RandomHintQueryMsg) Reset() {
	*x = RandomHintQueryMsg{}
	mi := &file_query_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RandomHintQueryMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomHintQueryMsg) ProtoMessage() {}

func (x *RandomHintQueryMsg) ProtoReflect() protoreflect.Message {
	mi := &file_query_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomHintQueryMsg.ProtoReflect.Descriptor instead.
func (*RandomHintQueryMsg) Descriptor() ([]byte, []int) {
	return file_query_query_proto_rawDescGZIP(), []int{2}
}

func (x *RandomHintQueryMsg) GetS0() uint32 {
	if x != nil {
		return x.S0
	}
	return 0
}

func (x *RandomHintQueryMsg) GetS1() uint32 {
	if x != nil {
		return x.S1
	}
	return 0
}

func (x *RandomHintQueryMsg) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type RandomHintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row0   []uint32 `protobuf:"varint,1,rep,packed,name=Row0,proto3" json:"Row0,omitempty"`
	Row1   []uint32 `protobuf:"varint,2,rep,packed,name=Row1,proto3" json:"Row1,omitempty"`
	Parity []uint64 `protobuf:"varint,3,rep,packed,name=Parity,proto3" json:"Parity,omitempty"`
}

func (x *RandomHintResponse) Reset() {
	*x = RandomHintResponse{}
	mi := &file_query_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RandomHintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomHintResponse) ProtoMessage() {}

func (x *RandomHintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomHintResponse.ProtoReflect.Descriptor instead.
func (*RandomHintResponse) Descriptor() ([]byte, []int) {
	return file_query_query_proto_rawDescGZIP(), []int{3}
}

func (x *RandomHintResponse) GetRow0() []uint32 {
	if x != nil {
		return x.Row0
	}
	return nil
}

func (x *RandomHintResponse) GetRow1() []uint32 {
	if x != nil {
		return x.Row1
	}
	return nil
}

func (x *RandomHintResponse) GetParity() []uint64 {
	if x != nil {
		return x.Parity
	}
	return nil
}

type ReplacementEntryQueryMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S1 uint32 `protobuf:"varint,1,opt,name=S1,proto3" json:"S1,omitempty"`
}

func (x *ReplacementEntryQueryMsg) Reset() {
	*x = ReplacementEntryQueryMsg{}
	mi := &file_query_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplacementEntryQueryMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplacementEntryQueryMsg) ProtoMessage() {}

func (x *ReplacementEntryQueryMsg) ProtoReflect() protoreflect.Message {
	mi := &file_query_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplacementEntryQueryMsg.ProtoReflect.Descriptor instead.
func (*ReplacementEntryQueryMsg) Descriptor() ([]byte, []int) {
	return file_query_query_proto_rawDescGZIP(), []int{4}
}

func (x *ReplacementEntryQueryMsg) GetS1() uint32 {
	if x != nil {
		return x.S1
	}
	return 0
}

type ReplacementEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index             []uint32 `protobuf:"varint,1,rep,packed,name=Index,proto3" json:"Index,omitempty"`
	Parity            []uint64 `protobuf:"varint,2,rep,packed,name=Parity,proto3" json:"Parity,omitempty"`
	ServerComputeTime uint64   `protobuf:"varint,3,opt,name=ServerComputeTime,proto3" json:"ServerComputeTime,omitempty"`
}

func (x *ReplacementEntryResponse) Reset() {
	*x = ReplacementEntryResponse{}
	mi := &file_query_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplacementEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplacementEntryResponse) ProtoMessage() {}

func (x *ReplacementEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplacementEntryResponse.ProtoReflect.Descriptor instead.
func (*ReplacementEntryResponse) Descriptor() ([]byte, []int) {
	return file_query_query_proto_rawDescGZIP(), []int{5}
}

func (x *ReplacementEntryResponse) GetIndex() []uint32 {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *ReplacementEntryResponse) GetParity() []uint64 {
	if x != nil {
		return x.Parity
	}
	return nil
}

func (x *ReplacementEntryResponse) GetServerComputeTime() uint64 {
	if x != nil {
		return x.ServerComputeTime
	}
	return 0
}

type SetParityQueryMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetNum  uint32   `protobuf:"varint,1,opt,name=SetNum,proto3" json:"SetNum,omitempty"`
	SetSize uint32   `protobuf:"varint,2,opt,name=SetSize,proto3" json:"SetSize,omitempty"`
	Indices []uint32 `protobuf:"varint,3,rep,packed,name=Indices,proto3" json:"Indices,omitempty"`
}

func (x *SetParityQueryMsg) Reset() {
	*x = SetParityQueryMsg{}
	mi := &file_query_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetParityQueryMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetParityQueryMsg) ProtoMessage() {}

func (x *SetParityQueryMsg) ProtoReflect() protoreflect.Message {
	mi := &file_query_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetParityQueryMsg.ProtoReflect.Descriptor instead.
func (*SetParityQueryMsg) Descriptor() ([]byte, []int) {
	return file_query_query_proto_rawDescGZIP(), []int{6}
}

func (x *SetParityQueryMsg) GetSetNum() uint32 {
	if x != nil {
		return x.SetNum
	}
	return 0
}

func (x *SetParityQueryMsg) GetSetSize() uint32 {
	if x != nil {
		return x.SetSize
	}
	return 0
}

func (x *SetParityQueryMsg) GetIndices() []uint32 {
	if x != nil {
		return x.Indices
	}
	return nil
}

type SetParityQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parity            []uint64 `protobuf:"varint,1,rep,packed,name=Parity,proto3" json:"Parity,omitempty"`
	ServerComputeTime uint64   `protobuf:"varint,2,opt,name=ServerComputeTime,proto3" json:"ServerComputeTime,omitempty"`
}

func (x *SetParityQueryResponse) Reset() {
	*x = SetParityQueryResponse{}
	mi := &file_query_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetParityQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetParityQueryResponse) ProtoMessage() {}

func (x *SetParityQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetParityQueryResponse.ProtoReflect.Descriptor instead.
func (*SetParityQueryResponse) Descriptor() ([]byte, []int) {
	return file_query_query_proto_rawDescGZIP(), []int{7}
}

func (x *SetParityQueryResponse) GetParity() []uint64 {
	if x != nil {
		return x.Parity
	}
	return nil
}

func (x *SetParityQueryResponse) GetServerComputeTime() uint64 {
	if x != nil {
		return x.ServerComputeTime
	}
	return 0
}

type HintComputeTimeQueryMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dummy uint32 `protobuf:"varint,1,opt,name=Dummy,proto3" json:"Dummy,omitempty"`
}

func (x *HintComputeTimeQueryMsg) Reset() {
	*x = HintComputeTimeQueryMsg{}
	mi := &file_query_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HintComputeTimeQueryMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HintComputeTimeQueryMsg) ProtoMessage() {}

func (x *HintComputeTimeQueryMsg) ProtoReflect() protoreflect.Message {
	mi := &file_query_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HintComputeTimeQueryMsg.ProtoReflect.Descriptor instead.
func (*HintComputeTimeQueryMsg) Descriptor() ([]byte, []int) {
	return file_query_query_proto_rawDescGZIP(), []int{8}
}

func (x *HintComputeTimeQueryMsg) GetDummy() uint32 {
	if x != nil {
		return x.Dummy
	}
	return 0
}

type HintComputeTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HintComputeTime uint64 `protobuf:"varint,1,opt,name=HintComputeTime,proto3" json:"HintComputeTime,omitempty"`
}

func (x *HintComputeTimeResponse) Reset() {
	*x = HintComputeTimeResponse{}
	mi := &file_query_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HintComputeTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HintComputeTimeResponse) ProtoMessage() {}

func (x *HintComputeTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HintComputeTimeResponse.ProtoReflect.Descriptor instead.
func (*HintComputeTimeResponse) Descriptor() ([]byte, []int) {
	return file_query_query_proto_rawDescGZIP(), []int{9}
}

func (x *HintComputeTimeResponse) GetHintComputeTime() uint64 {
	if x != nil {
		return x.HintComputeTime
	}
	return 0
}

var File_query_query_proto protoreflect.FileDescriptor

var file_query_query_proto_rawDesc = []byte{
	0x0a, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x29, 0x0a, 0x11, 0x50, 0x6c,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x25, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x56, 0x61, 0x6c, 0x22, 0x46, 0x0a, 0x12,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x53, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x53, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x4e, 0x75, 0x6d, 0x22, 0x54, 0x0a, 0x12, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x48, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f,
	0x77, 0x30, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x52, 0x6f, 0x77, 0x30, 0x12, 0x12,
	0x0a, 0x04, 0x52, 0x6f, 0x77, 0x31, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x52, 0x6f,
	0x77, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x06, 0x50, 0x61, 0x72, 0x69, 0x74, 0x79, 0x22, 0x2a, 0x0a, 0x18, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x53, 0x31, 0x22, 0x76, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x50, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x2c, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5f,
	0x0a, 0x11, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x65,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x22,
	0x5e, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x50, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x2f, 0x0a, 0x17, 0x48, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x75,
	0x6d, 0x6d, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x44, 0x75, 0x6d, 0x6d, 0x79,
	0x22, 0x43, 0x0a, 0x17, 0x48, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x48,
	0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x48, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xa7, 0x03, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x73, 0x67, 0x1a, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x19, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x48, 0x69, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x19, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x15, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x1f, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x73, 0x67, 0x1a, 0x1d, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x14, 0x48, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x48, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x1e, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x48, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x13, 0x5a, 0x11, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_query_query_proto_rawDescOnce sync.Once
	file_query_query_proto_rawDescData = file_query_query_proto_rawDesc
)

func file_query_query_proto_rawDescGZIP() []byte {
	file_query_query_proto_rawDescOnce.Do(func() {
		file_query_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_query_query_proto_rawDescData)
	})
	return file_query_query_proto_rawDescData
}

var file_query_query_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_query_query_proto_goTypes = []any{
	(*PlaintextQueryMsg)(nil),        // 0: query.PlaintextQueryMsg
	(*PlaintextResponse)(nil),        // 1: query.PlaintextResponse
	(*RandomHintQueryMsg)(nil),       // 2: query.RandomHintQueryMsg
	(*RandomHintResponse)(nil),       // 3: query.RandomHintResponse
	(*ReplacementEntryQueryMsg)(nil), // 4: query.ReplacementEntryQueryMsg
	(*ReplacementEntryResponse)(nil), // 5: query.ReplacementEntryResponse
	(*SetParityQueryMsg)(nil),        // 6: query.SetParityQueryMsg
	(*SetParityQueryResponse)(nil),   // 7: query.SetParityQueryResponse
	(*HintComputeTimeQueryMsg)(nil),  // 8: query.HintComputeTimeQueryMsg
	(*HintComputeTimeResponse)(nil),  // 9: query.HintComputeTimeResponse
}
var file_query_query_proto_depIdxs = []int32{
	0, // 0: query.QueryService.PlaintextQuery:input_type -> query.PlaintextQueryMsg
	2, // 1: query.QueryService.RandomHintQuery:input_type -> query.RandomHintQueryMsg
	4, // 2: query.QueryService.ReplacementEntryQuery:input_type -> query.ReplacementEntryQueryMsg
	6, // 3: query.QueryService.SetParityQuery:input_type -> query.SetParityQueryMsg
	8, // 4: query.QueryService.HintComputeTimeQuery:input_type -> query.HintComputeTimeQueryMsg
	1, // 5: query.QueryService.PlaintextQuery:output_type -> query.PlaintextResponse
	3, // 6: query.QueryService.RandomHintQuery:output_type -> query.RandomHintResponse
	5, // 7: query.QueryService.ReplacementEntryQuery:output_type -> query.ReplacementEntryResponse
	7, // 8: query.QueryService.SetParityQuery:output_type -> query.SetParityQueryResponse
	9, // 9: query.QueryService.HintComputeTimeQuery:output_type -> query.HintComputeTimeResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_query_query_proto_init() }
func file_query_query_proto_init() {
	if File_query_query_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_query_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_query_query_proto_goTypes,
		DependencyIndexes: file_query_query_proto_depIdxs,
		MessageInfos:      file_query_query_proto_msgTypes,
	}.Build()
	File_query_query_proto = out.File
	file_query_query_proto_rawDesc = nil
	file_query_query_proto_goTypes = nil
	file_query_query_proto_depIdxs = nil
}
